{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/php-issue-no/","result":{"data":{"markdownRemark":{"id":"3f2385cc-018d-5a46-807e-85ece9b5d272","html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\">コード</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%87%A6%E7%90%86%E7%B5%90%E6%9E%9C\">処理結果</a></p>\n<ol>\n<li><a href=\"#%E6%8A%9C%E3%81%91%E7%95%AA%E3%81%8C%E3%81%82%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%87%A6%E7%90%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">抜け番があるデータを処理した場合</a></li>\n<li><a href=\"#%E6%8A%9C%E3%81%91%E7%95%AA%E3%81%8C%E3%81%AA%E3%81%84%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%87%A6%E7%90%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\">抜け番がないデータを処理した場合</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E8%AA%AC\">解説</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>データベースから持ってきた数字のデータをチェックし、「抜け番」または「MAX+1」を生成する関数を作成しました。</p>\n<p>作成環境のPHPが5.3系だったので、コードは5.3系で動くものになっています。<br>\n何か不整合があれば教えてください。</p>\n<p>またご利用の際は、ご自身でしっかりチェックを行い、自己責任でご利用をお願いいたします。</p>\n<h2 id=\"コード\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\" aria-label=\"コード permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コード</h2>\n\n        <div class=\"gatsby-code-title your-custom-class-name\">\n          <span>PHP</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">/*\n* サンプルデータ\n* DBなどから取得したりする流れになると思いますが、処理中に最後の番号を参照するので、昇順できちんとソートしましょう。\n*/</span>\n<span class=\"token variable\">$numData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token comment\">/**\n* 新規番号を抜け番 or MAX+1で発行する\n* @param {array} $numData DBや何かしら持ってきたNoのデータ配列\n* @return {number} 抜け番 or MAX+1\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">issueNo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$numData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token variable\">$maxIdx</span> <span class=\"token operator\">=</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$numData</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$range</span> <span class=\"token operator\">=</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$numData</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$maxIdx</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1~データの最後のNoで連番の配列を作成</span>\n <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$range</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$idx</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$rangeNo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rangeNo</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$numData</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$idx</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$rangeNo</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//抜け番を返して終了</span>\n <span class=\"token punctuation\">}</span>\n <span class=\"token comment\">//MAX+1を返して終了</span>\n <span class=\"token keyword\">return</span> <span class=\"token variable\">$numData</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$maxIdx</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2 id=\"処理結果\" style=\"position:relative;\"><a href=\"#%E5%87%A6%E7%90%86%E7%B5%90%E6%9E%9C\" aria-label=\"処理結果 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>処理結果</h2>\n<h3 id=\"抜け番があるデータを処理した場合\" style=\"position:relative;\"><a href=\"#%E6%8A%9C%E3%81%91%E7%95%AA%E3%81%8C%E3%81%82%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%87%A6%E7%90%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\" aria-label=\"抜け番があるデータを処理した場合 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>抜け番があるデータを処理した場合</h3>\n<p>例えば array(1,2,4,5);<br>\nをこの関数に渡し処理した場合は<strong>抜け番の「3」がリターン</strong>されます。</p>\n<h3 id=\"抜け番がないデータを処理した場合\" style=\"position:relative;\"><a href=\"#%E6%8A%9C%E3%81%91%E7%95%AA%E3%81%8C%E3%81%AA%E3%81%84%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%87%A6%E7%90%86%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\" aria-label=\"抜け番がないデータを処理した場合 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>抜け番がないデータを処理した場合</h3>\n<p>例えば array(1,2,3,4,5);<br>\nのようなデータを処理すると<strong>MAX+1の「6」がリターン</strong>されます。</p>\n<h2 id=\"解説\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E8%AA%AC\" aria-label=\"解説 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解説</h2>\n<p>ポイントはrangeです。</p>\n\n        <div class=\"gatsby-code-title your-custom-class-name\">\n          <span>PHP</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"> <span class=\"token variable\">$range</span> <span class=\"token operator\">=</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$numData</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$maxIdx</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p>rangeで今回作成される配列は<strong>1～取得データのMAX値の連番の配列</strong>になります。</p>\n<p><span style=\"color: #ff0000;\"><strong>rangeで作成した連番の配列と取得したデータの数字の配列を比較する</strong></span>ことで、連番かどうかを確認しています。</p>\n<p>以上です。</p>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n  慣れないうちは頭で処理を想像するのが大変かもしれませんが、作っていれば慣れていくので大丈夫です\n  </div>\n</div>","frontmatter":{"date":"2020-06-04","update_at":"2020-06-04","title":"【PHP】データの連番確認と、抜け番またはMAX+1を生成する関数","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e87838","images":{"fallback":{"src":"/static/c6951d3dca0b8c400eddc3fd740ed0ca/2babd/server01.jpg","srcSet":"/static/c6951d3dca0b8c400eddc3fd740ed0ca/19e71/server01.jpg 128w,\n/static/c6951d3dca0b8c400eddc3fd740ed0ca/68974/server01.jpg 256w,\n/static/c6951d3dca0b8c400eddc3fd740ed0ca/2babd/server01.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/c6951d3dca0b8c400eddc3fd740ed0ca/6766a/server01.webp 128w,\n/static/c6951d3dca0b8c400eddc3fd740ed0ca/22bfc/server01.webp 256w,\n/static/c6951d3dca0b8c400eddc3fd740ed0ca/6d0d4/server01.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":511}}}}}},"pageContext":{"id":"3f2385cc-018d-5a46-807e-85ece9b5d272"}},"staticQueryHashes":["2786925534","3000541721","3159585216","3358258035","426580341","602374650"],"slicesMap":{}}