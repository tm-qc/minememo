{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/docker7/","result":{"data":{"markdownRemark":{"id":"2a7394f1-9df7-5482-b0b1-7d4286088174","html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></li>\n<li><a href=\"#1phpmyadmin%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\">1.phpMyAdmin表示確認</a></li>\n<li><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第七回目です。<br>\n前回はLaravelのDB設定、動作確認を行いました。</p>\n<p>過去の手順は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://minememo.work/docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"https://minememo.work/docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"https://minememo.work/docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"https://minememo.work/docker4\">【Docker】#4 Laravelをコマンドでインストール</a><br>\n<a href=\"https://minememo.work/docker5\">【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認</a><br>\n<a href=\"https://minememo.work/docker6\">【Docker】#6 LaravelのDB設定、確認</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"1phpmyadmin表示確認\" style=\"position:relative;\"><a href=\"#1phpmyadmin%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\" aria-label=\"1phpmyadmin表示確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.phpMyAdmin表示確認</h2>\n<p>今回は以下のURLにアクセスし、phpMyAdminが表示できればOKです。<br>\n<a href=\"http://localhost:8080/\">http://localhost:8080/</a></p>\n<p>ログイン情報は以下の通りです。</p>\n<ul>\n<li>ユーザ名：root</li>\n<li>パスワード：password</li>\n</ul>\n<p>この値は docker-compose.yml のサービス名 phpmyadminの PMA_USER 、PMA_PASSWORD に設定されてる値になります。</p>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>アクセスする前に…</strong><br>\n前回同様 docker-compose up -d をしてコンテナを起動し環境を立ち上げておいてください。</p>\n<p>分からない場合は前回の記事を参考にしてください。</p>\n<p><a href=\"https://minememo.work/docker5#1docker-composeyml\">docker-compose.ymlからコンテナを起動</a></p>\n</div>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>「接続できません。設定が無効です。」みたいなエラーがでた場合</strong></p>\n<p>キャッシュの影響などでうまくいかないことがあります。<br>\nそういったときは以下のコマンドを実行する事で解決できます。</p>\n<p>イメージの更新が反映しない時などもこちらで解決することが多いです。</p>\n<p>1.<br>\nDocker内で現在起動してない、イメージ、コンテナ、ネットワーク、キャッシュを削除（prune）する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker system prune</code></pre></div>\n<p>2.<br>\n再度環境を起動する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d</code></pre></div>\n</div>\n<div class=\"boxparts point\">\n  <div class=\"title\"></div>\n<p><strong>なぜ8080？</strong><br>\ndocker-compose.yml の サービス名 phpmyadmin の ports を 8080:80と記載しているからです。</p>\n<p>コンテナの80番ポートをローカルの8080番ポートで表示するという意味になります。(ポートフォワーディング)</p>\n<p>ちなみに8080の部分は使われていないポート番号であれば、なんでも大丈夫です。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は8！いよいよ最後！「出来てる環境の確認」を行います。</p>\n<p>本シリーズの全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n自分でなんとか勉強して、実践してまとめてきましたが、なかなか難しいですよね。 わからないときも焦らずにやるのが大事だと思います。  \n無理せずに頑張っていきましょう\n  </div>\n</div>","frontmatter":{"date":"2022-10-24","update_at":"2022-10-24","title":"【Docker】#7 phpMyAdmin表示確認","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}}}},"pageContext":{"id":"2a7394f1-9df7-5482-b0b1-7d4286088174"}},"staticQueryHashes":["2786925534","3000541721","3159585216","3358258035","426580341","602374650"],"slicesMap":{}}