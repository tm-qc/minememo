{"componentChunkName":"component---src-templates-tags-js","path":"/tags/docker/","result":{"data":{"allMarkdownRemark":{"totalCount":9,"edges":[{"node":{"fields":{"slug":"/posts/always_use_docker_compose_commands/"},"frontmatter":{"title":"【Docker】よく使うコマンド","date":"2022-10-26","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E8%B5%B7%E5%8B%95%E5%81%9C%E6%AD%A2\">コンテナ起動～停止</a></p>\n<ol>\n<li><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E8%B5%B7%E5%8B%95\">1.コンテナ起動</a></li>\n<li><a href=\"#2%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%81%9C%E6%AD%A2\">2.コンテナ停止</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E4%B8%80%E8%A6%A7%E3%82%92%E7%A2%BA%E8%AA%8D\">起動しているコンテナの一覧を確認</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84\">コンテナ内でコマンドを実行したい</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E3%82%8A%E7%9B%B4%E3%81%97%E3%81%9F%E3%81%84\">イメージからコンテナ(環境)を作り直したい</a></p>\n<ol>\n<li><a href=\"#1%E4%BB%8A%E3%81%84%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E5%89%8A%E9%99%A4\">1.今いるディレクトリに対してイメージ、コンテナの削除</a></li>\n<li><a href=\"#2%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%8D%E8%B5%B7%E5%8B%95\">2.コンテナ再起動</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">【おまけ】その他のコマンド</a></p>\n<ol>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%81%9C%E6%AD%A2\">コンテナ停止</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%89%8A%E9%99%A4\">コンテナ削除</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%8D%E8%B5%B7%E5%8B%95\">コンテナ再起動</a></li>\n<li><a href=\"#%E4%BB%8A%E3%81%82%E3%82%8B%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E7%A2%BA%E8%AA%8D\">今あるイメージを確認</a></li>\n<li><a href=\"#%E5%AF%BE%E8%B1%A1%E3%81%AE%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E5%89%8A%E9%99%A4\">対象のイメージを削除</a></li>\n<li><a href=\"#docker-composeyml%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B91%E3%81%A4%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\">docker-compose.ymlで管理されているサービス1つを指定してコマンドを実行する</a></li>\n<li><a href=\"#docker-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E8%A9%B3%E7%B4%B0%E6%83%85%E5%A0%B1%E7%A2%BA%E8%AA%8D\">Docker コンテナの詳細情報確認</a></li>\n<li><a href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%AE%E5%B1%A5%E6%AD%B4%E3%82%92%E7%A2%BA%E8%AA%8D\">イメージの履歴を確認</a></li>\n<li><a href=\"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%87%BA%E5%8A%9B\">Dockerコンテナのログを出力</a></li>\n<li><a href=\"#docker-%E5%85%A8%E4%BD%93%E3%81%AE%E3%81%8A%E6%8E%83%E9%99%A4\">Docker 全体のお掃除</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>Dockerで個人的によく使うコマンドを目的別に記載します。<br>\n基本的にDockerのコマンドではなく、docker compose のコマンドを利用しています。</p>\n<p>最初は**「コンテナ起動～停止」**だけ使えればいいと思います。<br>\n自分でDocker構築したり、その他情報がしりたくなったら他のコマンドが必要になる感じです。</p>\n<p><span style=\"color: #ff0000;\">どのコマンドも cd で docker-compose.yml があるフォルダに移動して、行うことは共通になります。</span></p>\n<p>別記事でDockerで以下の環境を作成するチュートリアル記事も書いてますので、よかったら見てみてください。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"../docker4\">【Docker】#4 Laravelをコマンドでインストール</a><br>\n<a href=\"../docker5\">【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認</a><br>\n<a href=\"../docker6\">【Docker】#6 LaravelのDB設定、確認</a><br>\n<a href=\"../docker7\">【Docker】#7 phpMyAdmin表示確認</a><br>\n<a href=\"../docker8\">【Docker】#8 できてる環境の確認</a></p>\n</div>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"コンテナ起動停止\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E8%B5%B7%E5%8B%95%E5%81%9C%E6%AD%A2\" aria-label=\"コンテナ起動停止 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンテナ起動～停止</h2>\n<p>普段一番使うコマンドです。</p>\n<p>Dockerの設定ファイルが出来たらあとは環境を起動、停止して開発をすすめるという流れになるので、基本的にこれしか使わなくなります。</p>\n<p>※コマンドじゃなくても、Docker Desktopアプリでもスタート、停止できます。</p>\n<h3 id=\"1コンテナ起動\" style=\"position:relative;\"><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E8%B5%B7%E5%8B%95\" aria-label=\"1コンテナ起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.コンテナ起動</h3>\n<p>以下のコマンドを実行するとコンテナが起動します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d</code></pre></div>\n<p>※このコマンドはビルド( docker-compose build )+スタート( docker-compose start )を行っています。<br>\n※ -d はバックグラウンド実行になり、コマンドプロンプトの占有を防ぐためのオプションです。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/compose/reference/up.html\">docker-compose up</a></p>\n</div>\n<h3 id=\"2コンテナ停止\" style=\"position:relative;\"><a href=\"#2%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%81%9C%E6%AD%A2\" aria-label=\"2コンテナ停止 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.コンテナ停止</h3>\n<p>稼働中のコンテナを停止します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose stop</code></pre></div>\n<p>※コンテナの削除はしません。<br>\n※docker-compose start または docker-compose up で再起動できます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/compose/reference/stop.html\">docker-compose stop</a></p>\n</div>\n<h2 id=\"起動しているコンテナの一覧を確認\" style=\"position:relative;\"><a href=\"#%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E4%B8%80%E8%A6%A7%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"起動しているコンテナの一覧を確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起動しているコンテナの一覧を確認</h2>\n<p>今起動しているコンテナを確認したい場合は以下のコマンドで確認できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose ps\n</code></pre></div>\n<p>※コマンドじゃなくても、Docker Desktopアプリでも確認できます。<br>\n※起動していないコンテナも確認したい場合は -a オプションを使います。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/compose/reference/ps.html\">docker-compose ps</a></p>\n</div>\n<h2 id=\"コンテナ内でコマンドを実行したい\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"コンテナ内でコマンドを実行したい permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンテナ内でコマンドを実行したい</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec サービス名 実行したいコマンド</code></pre></div>\n<p>※このコマンドは docker exec と同じです<br>\n※ -it オプションでコンテナの中の環境に入って、対話モードでコマンドできるようにできます。抜けるときはexitでOKです。</p>\n<p>例）コンテナ内で bash (コマンドプロンプトの一種)を起動して、MySQLに接続するコマンド</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker-compose exec DBのサービス名 bash\n[db]:/$ mysql -u ユーザ名 -p\n// パスワードを求められるので入力\n\n//データベース指定\n[db] mysql> use database;\n\n//テーブル表示\n[db] mysql> show tables;</code></pre></div>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/compose/reference/exec.html\">docker-compose exec</a></p>\n</div>\n<h2 id=\"イメージからコンテナ環境を作り直したい\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E3%82%8A%E7%9B%B4%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"イメージからコンテナ環境を作り直したい permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>イメージからコンテナ(環境)を作り直したい</h2>\n<h3 id=\"1今いるディレクトリに対してイメージコンテナの削除\" style=\"position:relative;\"><a href=\"#1%E4%BB%8A%E3%81%84%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E5%89%8A%E9%99%A4\" aria-label=\"1今いるディレクトリに対してイメージコンテナの削除 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.今いるディレクトリに対してイメージ、コンテナの削除</h3>\n<p>Dockerの設定ファイルを書き直したり、イメージをつくりなおして再度コンテナを起動したい場合は、よく以下のコマンドを使い削除します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose down --rmi all --remove-orphans</code></pre></div>\n<p>このコマンドを使うことで、Docker内のキャッシュなどの影響で起こるよくわからないエラーなども回避しつつ、再構築ができます。</p>\n<p>要約すると以下のことを行います。<br>\n<span style=\"color: #ff0000;\">今いるディレクトリに対してコンテナ停止、削除、ネットワーク、イメージ、未定義のコンテナを削除してきれいにする</span></p>\n<p>各オプションなどについて↓</p>\n<ul>\n<li>docker-compose down は docker-compose up で作成したコンテナとネットワークを停止、削除</li>\n<li>–rmi all オプションで全イメージを削除</li>\n<li>–remove-orphans オプションでComposeファイルで定義していないサービス用のコンテナも削除</li>\n</ul>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/compose/reference/down.html\">docker-compose down</a></p>\n</div><div class=\"concept-box6\">よくでてくる「docker system prune」はディレクトリ関係なく、使われてないイメージ、コンテナ、ネットワークを削除（prune）するコマンドです。\n<p>Docker全体に対するお掃除という感じです。</p>\n</div>\n<div class=\"boxparts point\">\n  <div class=\"title\"></div>\n<p><strong>■ボリュームについて</strong><br>\n※いつか別記事移行するかも…</p>\n<p>Dockerはメモリ上で動くため、コンテナを削除した時点で作業した内容が消えてしまいます。<br>\nそのためボリュームという機能をつかってファイルやDBの情報を永続化し消えないようにします。</p>\n<p>主に以下のように使われます。</p>\n<p><strong>・バインドマウント</strong><br>\n<strong>主に作業ファイルを残したいときに使います。</strong><br>\nローカルにコンテナ側を同期してパソコン内に作業ファイルを保存します。<br>\n<span style=\"color: #ff0000;\">削除タイミングは自分でフォルダを消すときになります。</span></p>\n<p><strong>・名前付きボリューム</strong><br>\n<strong>DBのデータなどを残したいときに使います。</strong><br>\nDocker内で保持されるので、一見するとどこに行ったかわからなくなりますが、Docker Desktop アプリや docker volume ls コマンドで確認できます。</p>\n<p><span style=\"color: #ff0000;\">削除タイミングは docker-compose down や docker system prune で<strong>ボリュームオプションを指定したタイミング</strong>です。</span></p>\n<p>※匿名ボリュームというのもありますが、基本的に名前付きがつかわれます。</p>\n<p>ボリュームの実際の書き方は以下のdocker-compose.ymlのコメントを参考にしてください。<br>\n<a href=\"../docker3#1docker-composeyml\">docker-compose.ymlを作成</a></p>\n<p>ボリュームはしれっとたまっていくので定期的にお掃除する必要があります。<br>\n作業データがいらなくなったときに、以下どちらを使い用途に応じて削除するといいと思います。</p>\n<p>1.</p>\n<p>今いるディレクトリに対してコンテナ停止、削除、ネットワーク、イメージ、ボリューム、未定義のコンテナを削除する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose down --rmi all --volumes --remove-orphans</code></pre></div>\n<p>2.<br>\nディレクトリ関係なく、起動していない、ボリューム、イメージ、コンテナ、ネットワークを削除（prune）する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker system prune --volumes\nまたは\ndocker volume prune</code></pre></div>\n</div>\n<h3 id=\"2コンテナ再起動\" style=\"position:relative;\"><a href=\"#2%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%8D%E8%B5%B7%E5%8B%95\" aria-label=\"2コンテナ再起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.コンテナ再起動</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d</code></pre></div>\n<h2 id=\"おまけその他のコマンド\" style=\"position:relative;\"><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\" aria-label=\"おまけその他のコマンド permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【おまけ】その他のコマンド</h2>\n<p>必要になったときに見てください。<br>\n基本は上記の内容で事足りると思います。</p>\n<h3 id=\"コンテナ停止\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%81%9C%E6%AD%A2\" aria-label=\"コンテナ停止 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンテナ停止</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose stop</code></pre></div>\n<h3 id=\"コンテナ削除\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%89%8A%E9%99%A4\" aria-label=\"コンテナ削除 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンテナ削除</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose rm</code></pre></div>\n<p>※起動しているコンテナは削除できません</p>\n<h3 id=\"コンテナ再起動\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%8D%E8%B5%B7%E5%8B%95\" aria-label=\"コンテナ再起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンテナ再起動</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose restart</code></pre></div>\n<h3 id=\"今あるイメージを確認\" style=\"position:relative;\"><a href=\"#%E4%BB%8A%E3%81%82%E3%82%8B%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"今あるイメージを確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>今あるイメージを確認</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker images</code></pre></div>\n<p>※docker compose ではなく docker のコマンド</p>\n<h3 id=\"対象のイメージを削除\" style=\"position:relative;\"><a href=\"#%E5%AF%BE%E8%B1%A1%E3%81%AE%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E5%89%8A%E9%99%A4\" aria-label=\"対象のイメージを削除 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>対象のイメージを削除</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker rmi イメージ名 or イメージID</code></pre></div>\n<p>※docker compose ではなく docker のコマンド<br>\n※コンテナがあるイメージは削除できません<br>\n※強制削除もあるが今回はなし</p>\n<h3 id=\"docker-composeymlで管理されているサービス1つを指定してコマンドを実行する\" style=\"position:relative;\"><a href=\"#docker-composeyml%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B91%E3%81%A4%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\" aria-label=\"docker composeymlで管理されているサービス1つを指定してコマンドを実行する permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker-compose.ymlで管理されているサービス1つを指定してコマンドを実行する</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose run サービス名 コマンド</code></pre></div>\n<p>※ビルド前でも実行可能なコマンド。一時的にコンテナ作成してコマンドを実行できる</p>\n<p>例）<br>\ndocker-composeのvolumeでフレームワークのフォルダが事前に必要な場合に<br>\n先にフレームワークのインストールだけしておく際などに使える。<br>\nフォルダが先にないとエラーが出たりする</p>\n<p>この記事でLaravelをインストールするときに使ってます。<br>\n<a href=\"../docker4#2Laravel\">2.Laravelのインストールコマンドを実行</a></p>\n<h3 id=\"docker-コンテナの詳細情報確認\" style=\"position:relative;\"><a href=\"#docker-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E8%A9%B3%E7%B4%B0%E6%83%85%E5%A0%B1%E7%A2%BA%E8%AA%8D\" aria-label=\"docker コンテナの詳細情報確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker コンテナの詳細情報確認</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker inspect コンテナ指定</code></pre></div>\n<p>※docker compose ではなく docker のコマンド<br>\n※よくみるのは<br>\nmount ：どこのvolumeをマウントしてるか<br>\nconfig：だれがもってるかとか、環境変数とか、Cmdとか<br>\nnetwork setting：コンテナのUPAddress(ホストからつなげるIP)の確認もできる<br>\n※IPは docker-compose ps のコンテナ一覧でみることが多いです</p>\n<h3 id=\"イメージの履歴を確認\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%AE%E5%B1%A5%E6%AD%B4%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"イメージの履歴を確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>イメージの履歴を確認</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker history イメージ名:タグ</code></pre></div>\n<p>※docker compose ではなく docker のコマンド<br>\n※他人が作ったイメージの更新履歴を知りたいときに使う</p>\n<h3 id=\"dockerコンテナのログを出力\" style=\"position:relative;\"><a href=\"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%87%BA%E5%8A%9B\" aria-label=\"dockerコンテナのログを出力 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerコンテナのログを出力</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker logs コンテナ指定</code></pre></div>\n<p>※docker compose ではなく docker のコマンド<br>\n※アクセスログ、不明な停止の原因を確認した時に使う<br>\n※リアルタイム監視でログをだすにはオプション -f を使います。<br>\n作業中をリアルタイムで追えるようになります</p>\n<h3 id=\"docker-全体のお掃除\" style=\"position:relative;\"><a href=\"#docker-%E5%85%A8%E4%BD%93%E3%81%AE%E3%81%8A%E6%8E%83%E9%99%A4\" aria-label=\"docker 全体のお掃除 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker 全体のお掃除</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker system prune</code></pre></div>\n<p>※docker compose ではなく docker のコマンド</p>\n<p>ディレクトリ関係なく、イメージ、コンテナ、ネットワークを削除（prune）する<br>\nボリュームはデフォルトでは削除されないため、–volumes フラグを使う必要があります。<br>\n※使用中のものは消されないのでstopしないといけない<br>\n※docker compose ではなく docker のコマンド</p>\n<p>※オプション -a<br>\n既存のコンテナ～使われていないイメージすべてを削除する<br>\nなぜかイメージが消えない時はこれ。全部消えるので注意</p>\n<div class=\"boxparts point\">\n  <div class=\"title\"></div>\n<p><a href=\"https://docs.docker.jp/config/pruning.html\">使用していない Docker オブジェクトの削除（prune）</a></p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n正直自分のためのメモでもある！おまけは覚えなくていいし、困ったら見てください。<br>\nちなみにdockerコマンドとdocker-composeコマンドは同じことができるコマンドがあったりするので、好きな方を使うでOKです。\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker8/"},"frontmatter":{"title":"【Docker】#8 出来てる環境の確認","date":"2022-10-25","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></p>\n</li>\n<li>\n<p><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%97%E7%92%B0%E5%A2%83%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B\">1.コンテナを起動し環境を立ち上げる</a></p>\n</li>\n<li>\n<p><a href=\"#2php%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">2.phpのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#3composer%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">3.Composerのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#4git%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">4.gitのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#5%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%B8%88%E3%81%AE%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD%E3%81%AE%E4%B8%80%E8%A6%A7\">5.インストール済の拡張機能の一覧</a></p>\n</li>\n<li>\n<p><a href=\"#6phpini%E3%81%8C%E3%82%B3%E3%83%94%E3%83%BC%E5%87%BA%E6%9D%A5%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D\">6.php.iniがコピー出来ているか確認</a></p>\n<ol>\n<li><a href=\"#1php%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7bash%E3%82%92%E8%B5%B7%E5%8B%95\">1.phpのコンテナ内でbashを起動</a></li>\n<li><a href=\"#2cat%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AEphpini%E3%82%92%E8%A1%A8%E7%A4%BA\">2.catコマンドでコンテナ内のphp.iniを表示</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#7nginx%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">7.nginxのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#8mysql%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\">8.mysqlのバージョンを確認</a></p>\n</li>\n<li>\n<p><a href=\"#9laravel%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">9.Laravelのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#10phpmyadmin%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\">10.phpmyadminのバージョン確認</a></p>\n</li>\n<li>\n<p><a href=\"#11nodejs%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\">11.nodejsのバージョンを確認</a></p>\n</li>\n<li>\n<p><a href=\"#12npm%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\">12.npmのバージョンを確認</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第八回目です。<br>\n前回はphpMyAdmin表示確認を行いました。</p>\n<p>これだけの環境を構築できるものを作成したと思うと、自分よくやった！ってなりますね。<br>\nしかもシェアしやすい！！<br>\n確認するものは多いですが、やることは楽なので、コマンドになれるついでに確認してみてください。</p>\n<p>過去の手順は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"../docker4\">【Docker】#4 Laravelをコマンドでインストール</a><br>\n<a href=\"../docker5\">【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認</a><br>\n<a href=\"../docker6\">【Docker】#6 LaravelのDB設定、確認</a>\n<a href=\"../docker7\">【Docker】#7 phpMyAdmin表示確認</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。</p>\n<p>本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"1コンテナを起動し環境を立ち上げる\" style=\"position:relative;\"><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%97%E7%92%B0%E5%A2%83%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B\" aria-label=\"1コンテナを起動し環境を立ち上げる permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.コンテナを起動し環境を立ち上げる</h2>\n<p>各コマンドを実行してバージョンなどを確認していきます。<br>\n作業前に、Docker Desktopアプリを起動し、「docker-compose up -d」でコンテナを起動し環境を立ち上げておいてください。</p>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n分からない場合は前回の記事を参考にしてください。\n<p><a href=\"../docker5#1docker-composeyml\">docker-compose.ymlからコンテナを起動</a></p>\n</div>\n<h2 id=\"2phpのバージョン確認\" style=\"position:relative;\"><a href=\"#2php%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"2phpのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.phpのバージョン確認</h2>\n<p>今回はPHP 8.0.23になっていると思います。<br>\n以下を実行し、インストールしたバージョンが返ってきたらOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php php -v</code></pre></div>\n<div class=\"boxparts point\">\n  <div class=\"title\"></div>\n<p><strong>docker-compose exec <span style=\"color: #0000ff;\">php</span> <span style=\"color: #ff6600;\">php -v</span>について</strong></p>\n<p>docker-compose execはDockerの仮想環境に対してコマンドを実行するコマンドです。</p>\n<p>「docker-compose exec <span style=\"color: #0000ff;\">サービス名</span> <span style=\"color: #ff6600;\">実行したいコマンド</span>」</p>\n<p>という風に記載して使います。<br>\nサービス名は docker-compese.yml に記載されているサービス名です。</p>\n</div>\n<h2 id=\"3composerのバージョン確認\" style=\"position:relative;\"><a href=\"#3composer%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"3composerのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.Composerのバージョン確認</h2>\n<p>今回はComposer version 2.4.1になっていると思います。<br>\n以下を実行し、インストールしたバージョンが返ってきたらOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php composer -v</code></pre></div>\n<h2 id=\"4gitのバージョン確認\" style=\"position:relative;\"><a href=\"#4git%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"4gitのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.gitのバージョン確認</h2>\n<p>特にバージョン指定はしてないので、以下を実行し、バージョンが返ってきたらOKです。<br>\nこの記事を作成しているときは git version 2.30.2 が返ってきてました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php git --version</code></pre></div>\n<h2 id=\"5インストール済の拡張機能の一覧\" style=\"position:relative;\"><a href=\"#5%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%B8%88%E3%81%AE%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD%E3%81%AE%E4%B8%80%E8%A6%A7\" aria-label=\"5インストール済の拡張機能の一覧 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.インストール済の拡張機能の一覧</h2>\n<p>docker\\php\\Dockerfile の RUN で install しているパッケージ名が表示されます。</p>\n<p>沢山表示されるので、完全には把握してませんが、install部分に記載されているパッケージ名があればいいかな。くらいで確認しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php php -m</code></pre></div>\n<h2 id=\"6phpiniがコピー出来ているか確認\" style=\"position:relative;\"><a href=\"#6phpini%E3%81%8C%E3%82%B3%E3%83%94%E3%83%BC%E5%87%BA%E6%9D%A5%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D\" aria-label=\"6phpiniがコピー出来ているか確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.php.iniがコピー出来ているか確認</h2>\n<p>phpの設定ファイルがコピーできているか確認します。<br>\nローカルからコピーされた、コンテナにあるphp.iniの内容が表示されればOKです。</p>\n<h3 id=\"1phpのコンテナ内でbashを起動\" style=\"position:relative;\"><a href=\"#1php%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%A7bash%E3%82%92%E8%B5%B7%E5%8B%95\" aria-label=\"1phpのコンテナ内でbashを起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.phpのコンテナ内でbashを起動</h3>\n<p>phpのコンテナ内でコマンドを実行できるようにします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php bash</code></pre></div>\n<h3 id=\"2catコマンドでコンテナ内のphpiniを表示\" style=\"position:relative;\"><a href=\"#2cat%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AEphpini%E3%82%92%E8%A1%A8%E7%A4%BA\" aria-label=\"2catコマンドでコンテナ内のphpiniを表示 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.catコマンドでコンテナ内のphp.iniを表示</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat /usr/local/etc/php/php.ini</code></pre></div>\n<h2 id=\"7nginxのバージョン確認\" style=\"position:relative;\"><a href=\"#7nginx%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"7nginxのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.nginxのバージョン確認</h2>\n<p>今回はnginx/1.22.0になっていると思います。<br>\n以下を実行し、インストールしたバージョンが返ってきたらOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose exec nginx nginx -v</code></pre></div>\n<h2 id=\"8mysqlのバージョンを確認\" style=\"position:relative;\"><a href=\"#8mysql%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"8mysqlのバージョンを確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.mysqlのバージョンを確認</h2>\n<p>今回はmysql Ver 8.0.30になっていると思います。<br>\n以下を実行し、インストールしたバージョンが返ってきたらOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker compose exec mysql mysql -V</code></pre></div>\n<h2 id=\"9laravelのバージョン確認\" style=\"position:relative;\"><a href=\"#9laravel%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"9laravelのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.Laravelのバージョン確認</h2>\n<p>今回はLaravel Framework 6.20.44(PHP 8.0.23 に対する Laravel6 の最新)になっていると思います。<br>\n以下を実行し、インストールしたバージョンが返ってきたらOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker compose exec php php artisan -v</code></pre></div>\n<h2 id=\"10phpmyadminのバージョン確認\" style=\"position:relative;\"><a href=\"#10phpmyadmin%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%A2%BA%E8%AA%8D\" aria-label=\"10phpmyadminのバージョン確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10.phpmyadminのバージョン確認</h2>\n<p>phpMyAdminのTOPページ(HOME)でバージョン情報を確認できます。<br>\nアクセス方法は「<a href=\"../docker7\">【Docker】#7 phpMyAdmin表示確認</a>」を参考にしてください。</p>\n<p>latestなので、最新が入るようになっています。</p>\n<h2 id=\"11nodejsのバージョンを確認\" style=\"position:relative;\"><a href=\"#11nodejs%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"11nodejsのバージョンを確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.nodejsのバージョンを確認</h2>\n<p>docker\\php\\Dockerfile の apt-get installでインストールしてますが、バージョン指定していません。<br>\n安定版の最新が入ると思いますが、詳細は個々で確認をお願いします。</p>\n<p>記事作成時点では 7.5.2 になっていました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker compose exec php node -v</code></pre></div>\n<h2 id=\"12npmのバージョンを確認\" style=\"position:relative;\"><a href=\"#12npm%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D\" aria-label=\"12npmのバージョンを確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12.npmのバージョンを確認</h2>\n<p>docker\\php\\Dockerfile の apt-get installでインストールしてますが、バージョン指定していません。<br>\n安定版の最新が入ると思いますが、詳細は個々で確認をお願いします。</p>\n<p>記事作成時点では v12.22.12 になっていました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker compose exec php npm -v</code></pre></div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>本シリーズはこれで完了です。<br>\n本当にお疲れ様でした。</p>\n<p>私自身もまだすべてを把握しているわけではないですが、特に問題なく使えています。<br>\nいきなりすべて把握するのは難しいので、分かる範囲で動かして検証しながら、知識を深めるようにしています。</p>\n<p>後日、よく使うDockerコマンドの記事を書けたらいいなと思っています。<br>\n皆さまがうまくいくことを祈っています。</p>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\nローカル環境つくって、シェアするだけでもこんなに大変なので、本当エンジニアの労働環境、待遇が日本全体で見直されますように…！( ;∀;)<br><br>\nエンジニア問わず技術職の待遇を見直さないと日本は終わると思います・・・  \n特にアニメやゲーム！エンタメ大事です( ;∀;)\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker7/"},"frontmatter":{"title":"【Docker】#7 phpMyAdmin表示確認","date":"2022-10-24","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></li>\n<li><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></li>\n<li><a href=\"#1phpmyadmin%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\">1.phpMyAdmin表示確認</a></li>\n<li><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第七回目です。<br>\n前回はLaravelのDB設定、動作確認を行いました。</p>\n<p>過去の手順は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"../docker4\">【Docker】#4 Laravelをコマンドでインストール</a><br>\n<a href=\"../docker5\">【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認</a><br>\n<a href=\"../docker6\">【Docker】#6 LaravelのDB設定、確認</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"1phpmyadmin表示確認\" style=\"position:relative;\"><a href=\"#1phpmyadmin%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\" aria-label=\"1phpmyadmin表示確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.phpMyAdmin表示確認</h2>\n<p>今回は以下のURLにアクセスし、phpMyAdminが表示できればOKです。<br>\n<a href=\"http://localhost:8080/\">http://localhost:8080/</a></p>\n<p>ログイン情報は以下の通りです。</p>\n<ul>\n<li>ユーザ名：root</li>\n<li>パスワード：password</li>\n</ul>\n<p>この値は docker-compose.yml のサービス名 phpmyadminの PMA_USER 、PMA_PASSWORD に設定されてる値になります。</p>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>アクセスする前に…</strong><br>\n前回同様 docker-compose up -d をしてコンテナを起動し環境を立ち上げておいてください。</p>\n<p>分からない場合は前回の記事を参考にしてください。</p>\n<p><a href=\"../docker5#1docker-composeyml\">docker-compose.ymlからコンテナを起動</a></p>\n</div>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>「接続できません。設定が無効です。」みたいなエラーがでた場合</strong></p>\n<p>キャッシュの影響などでうまくいかないことがあります。<br>\nそういったときは以下のコマンドを実行する事で解決できます。</p>\n<p>イメージの更新が反映しない時などもこちらで解決することが多いです。</p>\n<p>1.<br>\nDocker内で現在起動してない、イメージ、コンテナ、ネットワーク、キャッシュを削除（prune）する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker system prune</code></pre></div>\n<p>2.<br>\n再度環境を起動する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d</code></pre></div>\n</div>\n<div class=\"boxparts point\">\n  <div class=\"title\"></div>\n<p><strong>なぜ8080？</strong><br>\ndocker-compose.yml の サービス名 phpmyadmin の ports を 8080:80と記載しているからです。</p>\n<p>コンテナの80番ポートをローカルの8080番ポートで表示するという意味になります。(ポートフォワーディング)</p>\n<p>ちなみに8080の部分は使われていないポート番号であれば、なんでも大丈夫です。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は8！いよいよ最後！「出来てる環境の確認」を行います。</p>\n<p>本シリーズの全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n自分でなんとか勉強して、実践してまとめてきましたが、なかなか難しいですよね。 わからないときも焦らずにやるのが大事だと思います。  \n無理せずに頑張っていきましょう\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker6/"},"frontmatter":{"title":"【Docker】#6 LaravelのDB設定、確認","date":"2022-10-22","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></p>\n</li>\n<li>\n<p><a href=\"#1laravel%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A7mysql%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\">1.Laravelの設定ファイルでMySQLの設定値を変更する</a></p>\n<ol>\n<li><a href=\"#1db_host\">1.DB_HOST</a></li>\n<li><a href=\"#2db_database\">2.DB_DATABASE</a></li>\n<li><a href=\"#3db_username\">3.DB_USERNAME</a></li>\n<li><a href=\"#4db_password\">4.DB_PASSWORD</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#2laravel%E3%81%A7db%E3%81%AB%E7%B9%8B%E3%81%8C%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D\">2.LaravelでDBに繋がるか確認</a></p>\n<ol>\n<li>\n<p><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AElaravel%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%81%AF%E3%81%84%E3%82%8B\">1.コンテナ内のLaravelにコマンドではいる</a></p>\n</li>\n<li>\n<p><a href=\"#2php-artisan-migrate%E3%81%8C%E5%8B%95%E3%81%8F%E3%81%8B%E7%A2%BA%E8%AA%8D\">2.php artisan migrateが動くか確認</a></p>\n<ol>\n<li><a href=\"#1%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E7%94%9F%E6%88%90\">1.テーブル生成</a></li>\n<li><a href=\"#2-%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%89%8A%E9%99%A4\">2. テーブル削除</a></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第六回目です。<br>\n前回Laravelの表示確認ができたので、次はLaravelのDB設定、確認を行います。</p>\n<p>過去の手順は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"../docker4\">【Docker】#4 Laravelをコマンドでインストール</a><br>\n<a href=\"../docker5\">【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"1laravelの設定ファイルでmysqlの設定値を変更する\" style=\"position:relative;\"><a href=\"#1laravel%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A7mysql%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\" aria-label=\"1laravelの設定ファイルでmysqlの設定値を変更する permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Laravelの設定ファイルでMySQLの設定値を変更する</h2>\n<p>LaravelのTOPにある「.env」ファイルを開き以下の値を各変数に設定してください<br>\n念のため例として1を書くと「DB_HOST=mysql」という風になります。</p>\n<h3 id=\"1db_host\" style=\"position:relative;\"><a href=\"#1db_host\" aria-label=\"1db_host permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.DB_HOST</h3>\n<p>mysql</p>\n<p>※docker-compese.ymlのDBのサービス名。今回はmysqlになります。<br>\n※dockerで立ち上げてるのでdocker-compese.ymlのDBのサービス名が自動でコンテナの内部IPに変換されてつながる仕組みです</p>\n<h3 id=\"2db_database\" style=\"position:relative;\"><a href=\"#2db_database\" aria-label=\"2db_database permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.DB_DATABASE</h3>\n<p>database</p>\n<p>※docker-compese.ymlのMYSQL_DATABASEで設定した値です。</p>\n<h3 id=\"3db_username\" style=\"position:relative;\"><a href=\"#3db_username\" aria-label=\"3db_username permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.DB_USERNAME</h3>\n<p>user</p>\n<p>※docker-compese.ymlのMYSQL_USERで設定した値です</p>\n<h3 id=\"4db_password\" style=\"position:relative;\"><a href=\"#4db_password\" aria-label=\"4db_password permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.DB_PASSWORD</h3>\n<p>password</p>\n<p>※docker-compese.ymlのMYSQL_PASSWORDで設定した値です。</p>\n<h2 id=\"2laravelでdbに繋がるか確認\" style=\"position:relative;\"><a href=\"#2laravel%E3%81%A7db%E3%81%AB%E7%B9%8B%E3%81%8C%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D\" aria-label=\"2laravelでdbに繋がるか確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.LaravelでDBに繋がるか確認</h2>\n<p>Dockerのコマンドでコンテナの中に入り、その中でLaravelのコマンド実行し、DBが動いているか確認します。</p>\n<h3 id=\"1コンテナ内のlaravelにコマンドではいる\" style=\"position:relative;\"><a href=\"#1%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AElaravel%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%81%AF%E3%81%84%E3%82%8B\" aria-label=\"1コンテナ内のlaravelにコマンドではいる permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.コンテナ内のLaravelにコマンドではいる</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker exec -it php bash</code></pre></div>\n<p>※bashを起動します<br>\n※ -it はインタラクティブモード(対話モード)で動かすオプションです</p>\n<h3 id=\"2php-artisan-migrateが動くか確認\" style=\"position:relative;\"><a href=\"#2php-artisan-migrate%E3%81%8C%E5%8B%95%E3%81%8F%E3%81%8B%E7%A2%BA%E8%AA%8D\" aria-label=\"2php artisan migrateが動くか確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.php artisan migrateが動くか確認</h3>\n<p>php artisan migrateはDB操作のLaravelのコマンドです。<br>\nなので、これでエラーが出なければOKということになります。</p>\n<h4 id=\"1テーブル生成\" style=\"position:relative;\"><a href=\"#1%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E7%94%9F%E6%88%90\" aria-label=\"1テーブル生成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.テーブル生成</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php artisan migrate</code></pre></div>\n<h4 id=\"2-テーブル削除\" style=\"position:relative;\"><a href=\"#2-%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E5%89%8A%E9%99%A4\" aria-label=\"2 テーブル削除 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. テーブル削除</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php artisan migrate:rollback</code></pre></div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は7「phpMyAdmin表示確認」を行います。</p>\n<p>全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。 ようやく終わりが近づいてきましたね。  \n作ってしまうときだけの手順なので、ぜひ最後まで頑張りましょう！  \n一回作ってしまえば、運用が簡単にできます！\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker5/"},"frontmatter":{"title":"【Docker】#5 dockerでコンテナ(機能)を起動+Laravel表示確認","date":"2022-10-20","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></p>\n</li>\n<li>\n<p><a href=\"#1docker-composeyml%E3%81%8B%E3%82%89%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95\">1.docker-compose.ymlからコンテナを起動</a></p>\n<ol>\n<li><a href=\"#1docker-desktop-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E8%B5%B7%E5%8B%95\">1.Docker Desktop アプリを起動</a></li>\n<li><a href=\"#2%E4%BD%9C%E6%A5%AD%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E7%A7%BB%E5%8B%95\">2.作業ディレクトリに移動</a></li>\n<li><a href=\"#3docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95\">3.Dockerコンテナを起動</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#2laravel%E3%81%AE%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\">2.Laravelの表示確認</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第五回目です。<br>\ndockerでコンテナ(機能)を起動+Laravelの表示確認します。</p>\n<p>Dockerfileや各種設定ファイル、そもそもDocker、Laravelのインストールが終わってない方は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p>[【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール](../\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a><br>\n<a href=\"../docker4\">【Docker】#4 Laravelをコマンドでインストール</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"1docker-composeymlからコンテナを起動\" style=\"position:relative;\"><a href=\"#1docker-composeyml%E3%81%8B%E3%82%89%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95\" aria-label=\"1docker composeymlからコンテナを起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.docker-compose.ymlからコンテナを起動</h2>\n<h3 id=\"1docker-desktop-アプリを起動\" style=\"position:relative;\"><a href=\"#1docker-desktop-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E8%B5%B7%E5%8B%95\" aria-label=\"1docker desktop アプリを起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Docker Desktop アプリを起動</h3>\n<p>Dockerを使うには、Docker Desktop アプリを起動する必要があります。<br>\nアプリを起動してください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p>Docker Desktop アプリってなんだっけ？という方は最初の記事を見てみてください。<br>\n最初にインストールしたアプリです。</p>\n<p><a href=\"../docker1#Docker_Desktop\">Docker Desktopインストール</a></p>\n</div>\n<h3 id=\"2作業ディレクトリに移動\" style=\"position:relative;\"><a href=\"#2%E4%BD%9C%E6%A5%AD%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E7%A7%BB%E5%8B%95\" aria-label=\"2作業ディレクトリに移動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.作業ディレクトリに移動</h3>\n<p>docker-compose.ymlがあるフォルダにコマンドで移動します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ローカルフォルダのパス</code></pre></div>\n<h3 id=\"3dockerコンテナを起動\" style=\"position:relative;\"><a href=\"#3docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%B5%B7%E5%8B%95\" aria-label=\"3dockerコンテナを起動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.Dockerコンテナを起動</h3>\n<p>Dockerのコンテナを起動し環境起動します。<br>\n※初回はキャッシュがないので時間かかります。<br>\n※ -dはコマンドプロンプトが占有されないように、バックグラウンドで実行するためのオプションです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d</code></pre></div>\n<div class=\"boxparts memo\">\n  <div class=\"title\"></div>\n<p><strong>■イメージ名の命名規則について</strong><br>\n今は分からなくてもよいですが以下のようになっています。</p>\n<p>{プロジェクトのフォルダ名}_{サービス名}となり、imageよりbuildのサービス名が優先される</p>\n<p>イメージ名って何になるんだろ？って思ったときに参考にしてください。<br>\nDocker DesktopのImageの画面でも確認ができます。</p>\n</div>\n<h2 id=\"2laravelの表示確認\" style=\"position:relative;\"><a href=\"#2laravel%E3%81%AE%E8%A1%A8%E7%A4%BA%E7%A2%BA%E8%AA%8D\" aria-label=\"2laravelの表示確認 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.Laravelの表示確認</h2>\n<p>docker-compese.ymlのportsで指定したポート番号でアクセスします。<br>\n今回はnginxのportsで8081:80と記載してるので以下のURLになります。</p>\n<p><a href=\"http://localhost:8081\">http://localhost:8081</a></p>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p>■Laravelでパーミッションエラーが出る場合は以下を実行してください。<br>\n・docker-compose exec php chmod -R 0777 bootstrap<br>\n・docker-compose exec php chmod -R 0777 storage</p>\n<p>※dockerのコンテナ(php)にはいり、パーミッションを変更しています。phpはdocker-compese.yml記載のサービス名のことです。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は6「LaravelのDB設定、確認」を行います。</p>\n<p>全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。<br>\n<p>Dockerはコンテナ？イメージ？Dockerfile?docker-compose.yml?などの役割が頭に入ってくると理解しやすくなりますが、<br>\nそこも慣れなので、焦らずにやっていきましょう。</p>\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker4/"},"frontmatter":{"title":"【Docker】#4 Laravelをコマンドでインストール","date":"2022-10-19","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\">現在の作業フォルダ</a></p>\n</li>\n<li>\n<p><a href=\"#laravel%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Laravelをコマンドでインストール</a></p>\n<ol>\n<li><a href=\"#1%E4%BD%9C%E6%A5%AD%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E7%A7%BB%E5%8B%95\">1.作業ディレクトリに移動</a></li>\n<li><a href=\"#2laravel%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C\">2.Laravelのインストールコマンドを実行</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第四回目です。<br>\nLaravel 6 をコマンドでインストールします。</p>\n<p>Dockerfileや各種設定ファイル、そもそもDockerのインストールが終わってない方は前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a><br>\n<a href=\"../docker3\">【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"現在の作業フォルダ\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\" aria-label=\"現在の作業フォルダ permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在の作業フォルダ</h2>\n<p>前回までに作成した以下のフォルダが作業ディレクトリになります。<br>\n参考までに記載しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel\t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\t　　　　MySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h2 id=\"laravelをコマンドでインストール\" style=\"position:relative;\"><a href=\"#laravel%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"laravelをコマンドでインストール permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Laravelをコマンドでインストール</h2>\n<h3 id=\"1作業ディレクトリに移動\" style=\"position:relative;\"><a href=\"#1%E4%BD%9C%E6%A5%AD%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E7%A7%BB%E5%8B%95\" aria-label=\"1作業ディレクトリに移動 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.作業ディレクトリに移動</h3>\n<p>docker-compose.ymlがあるフォルダにコマンドで移動します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ローカルフォルダのパス</code></pre></div>\n<h3 id=\"2laravelのインストールコマンドを実行\" style=\"position:relative;\"><a href=\"#2laravel%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C\" aria-label=\"2laravelのインストールコマンドを実行 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.Laravelのインストールコマンドを実行</h3>\n<p>LaravelのComposerのcreate-projectコマンドを使いインストールします。</p>\n<p>なお、dockerの機能を使って一時的にcomposerが使える状態にしてるので、docker-compose runというコマンドも使っています。<br>\n※そのため先にDockerの設定ファイルは作っておく必要があります。</p>\n<p>ちょっと時間かかるのでしばらく待ち、Application key set successfully.が表示されたらインストール完了です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose run php composer create-project --prefer-dist laravel/laravel . \"6.*\"</code></pre></div>\n<div class=\"boxparts memo\">\n  <div class=\"title\"></div>\n<p>本当はDockerfileやdocker-compese.ymlで一括で入れたい気もするのですが、ソースがコンテナにしかないとかlocalhostからアクセスできないなどの事象がおこるので、別に入れるようにしています。</p>\n<p>インストール先はdocker-compose.ymlのvolumesで設定されたパスになります。<br>\n今回はサービス名phpのvolumesの./laravel/:/appになります。<br>\nよくわからない時はdocker-compose.ymlを見てみてください。</p>\n<p>※ローカル：./laravel 配下<br>\n※コンテナ：/app 配下</p>\n<p>流れとしてはコンテナのapp配下にインストールされたLaravelのファイルがローカルの./laravel 配下にバインド(同期みたいなこと)されるということになります。</p>\n</div>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>■エラーについて</strong></p>\n<p>1.Project directory “フォルダ名” is not empty.<br>\nLaravelインストール先のフォルダ空じゃないのときに出るエラーです。</p>\n<p>2.failed to solve: rpc error: code = Unknown desc<br>\nDockerfileなどのインストールにかかわるパスの指定が間違っていないかを確認してください。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は5「dockerでコンテナ(機能)を起動+Laravel表示確認」を行います。</p>\n<p>全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。<br>Dockerはコンテナ？イメージ？Dockerfile?docker-compose.yml?などの役割が頭に入ってくると理解しやすくなりますが、  \nそこも慣れなので、焦らずにやっていきましょう。\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker3/"},"frontmatter":{"title":"【Docker】#3 Dockerfile+docker-compose.yml+各設定ファイルの設置","date":"2022-10-13","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%90%84%E6%A9%9F%E8%83%BD%E3%81%AEdockerfile%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\">各機能のDockerfile+設定ファイルを作成</a></p>\n<ol>\n<li>\n<p><a href=\"#1%E5%89%8D%E6%BA%96%E5%82%99\">1.前準備</a></p>\n</li>\n<li>\n<p><a href=\"#2nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\">2.nginxの設定ファイル</a></p>\n<ol>\n<li><a href=\"#1dockerfile\">1.Dockerfile</a></li>\n<li><a href=\"#2defaultconf\">2.default.conf</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#3php%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\">3.phpの設定ファイル</a></p>\n<ol>\n<li><a href=\"#1dockerfile-1\">1.Dockerfile</a></li>\n<li><a href=\"#2phpini\">2.php.ini</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#4mysql%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\">4.mysqlの設定ファイル</a></p>\n<ol>\n<li><a href=\"#1dockerfile-2\">1.Dockerfile</a></li>\n<li><a href=\"#2myconf\">2.my.conf</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#5docker-compose%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\">5.Docker Composeの設定ファイルを作成</a></p>\n<ol>\n<li><a href=\"#1docker-composeyml%E3%82%92%E4%BD%9C%E6%88%90\">1.docker-compose.ymlを作成</a></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第三回目です。<br>\nDockerで環境構築する際に必要な設定ファイルを作成します。</p>\n<p>今回は記事的に長くなると思います。<br>\n読んで理解できる方は必要なものだけ見てもらってもOKです。</p>\n<p>Dockerのインストールやフォルダ作成が終わってない方は、前回の記事を参考にしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a><br>\n<a href=\"../docker2\">【Docker】#2 ローカル(ホスト)に作業フォルダを作成</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"各機能のdockerfile設定ファイルを作成\" style=\"position:relative;\"><a href=\"#%E5%90%84%E6%A9%9F%E8%83%BD%E3%81%AEdockerfile%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\" aria-label=\"各機能のdockerfile設定ファイルを作成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>各機能のDockerfile+設定ファイルを作成</h2>\n<h3 id=\"1前準備\" style=\"position:relative;\"><a href=\"#1%E5%89%8D%E6%BA%96%E5%82%99\" aria-label=\"1前準備 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.前準備</h3>\n<p>前回docker#2で作成した。<br>\n以下のフォルダをベースに作成していきます。<br>\n未作成の方は前回の記事を参照して作成してみてください。</p>\n<p>前回フォルダを作成したので、今回は★のファイルを作成+設置を行います。</p>\n<p>Dockerfileは拡張なしのファイル名「Dockerfile」でOKです。</p>\n<p>設定ファイル内のコメントが基本説明になっているので、分からない場合は参考にしてください。<br>\n私自身が分かっていない部分もありますが、よろしくお願いします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel \t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile★\t\tphpのDockerfile\n│   │   └── php.ini★\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql \t\tMySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile★\t\tMySQLのDockerfile\n│   │   └── my.conf★\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile★\t\tnginxのDockerfile\n│   │   └── default.conf★\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml★\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<h3 id=\"2nginxの設定ファイル\" style=\"position:relative;\"><a href=\"#2nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\" aria-label=\"2nginxの設定ファイル permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.nginxの設定ファイル</h3>\n<p>docker\\nginx配下に以下2ファイルを設置します。</p>\n<h4 id=\"1dockerfile\" style=\"position:relative;\"><a href=\"#1dockerfile\" aria-label=\"1dockerfile permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Dockerfile</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#nginxのイメージを作成する自作ファイル\n\n#Docker Hub公式からPHPのイメージファイルを使用します。\n#nginxは1.18, 1.20などの偶数バージョンが安定バージョンであり、安定バージョンの使用を推奨されています。\n\n#※Alpineでのbashについて\n#　Alpineをベースとすると bash は使えず、 ash や sh は使えるようです。\n\n#イメージ名:タグ(version指定)\nFROM nginx:1.22-alpine\n\n#サーバー内の環境変数\nENV TZ Asia/Tokyo\n\n#nginxの設定ファイル（default.conf）をDockerの仮想環境内のコンテナ内にコピーします。\nCOPY ./docker/nginx/default.conf /etc/nginx/conf.d/default.conf</code></pre></div>\n<h4 id=\"2defaultconf\" style=\"position:relative;\"><a href=\"#2defaultconf\" aria-label=\"2defaultconf permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.default.conf</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#nginx設定ファイル\n#あまり詳しくないので以下の記事から引用させていただきコメント追加しています。\n#https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\n\nserver {\n    listen 80;\n    server_name example.com;\n\n    #ドキュメントルート\n    #localhost:8081でアクセスした場合に表示されるディレクトリ\n    #dockerコンテナのルートに書き換え\n    root /app/public;\n\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\";\n\n    index index.php;\n\n    charset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \\.php$ {\n        #FastCGIサーバーのアドレス\n        #FastCGI：Webサーバ上で動くプログラムを一度起動したらしばらく待機させることによって、プログラムの開始と終了にかかる手間を減らし、動きを速くしたりWebサーバの負荷を軽減することができる仕組み\n        #dockerコンテナのphpのポートに書き換え\n        #コンテナ起動後にdocker psで確認したphpのサービスのPORTSが9000/tcpだったので9000になっているっぽい\n        #通常は127.0.0.1:9000に設定されるが、docker-composeはサービス名(今回はphp)にipが自動で振られるのでサービス名にする\n        #参考：https://www.membersedge.co.jp/blog/laravel-development-environment-with-docker-compose/\n\n        fastcgi_pass php:9000;\n        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n        include fastcgi_params;\n    }\n\n    location ~ /\\.(?!well-known).* {\n        deny all;\n    }\n}</code></pre></div>\n<h3 id=\"3phpの設定ファイル\" style=\"position:relative;\"><a href=\"#3php%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\" aria-label=\"3phpの設定ファイル permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.phpの設定ファイル</h3>\n<p>docker\\php配下に以下2ファイルを設置します。</p>\n<h4 id=\"1dockerfile-1\" style=\"position:relative;\"><a href=\"#1dockerfile-1\" aria-label=\"1dockerfile 1 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Dockerfile</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#PHPのイメージを作成する自作ファイル\n\n#Docker Hub公式からPHPのイメージファイルを使用する\n#Laravel 6はphp8.1対応してないみたいなので8.0で。\n#この8.0の部分を変更するだけでバージョン変更できるので簡単！\n\n#イメージ名:タグ(version指定)\n# FROM php:8.1-fpm \nFROM php:8.0-fpm\n\n#サーバー内の環境変数\nENV TZ Asia/Tokyo\n\n#RUN:コンテナビルド時に実行するコマンド\n#インストール可能なパッケージの「一覧」を更新\nRUN apt-get update &amp;&amp; \\\n    #パッケージをインストール(ここでコンテナにnpmやgitなども入ります)\n    #インストール先の確認はdocker-compose exec php dpkg -L パッケージ名でできる\n    #gitの場合 docker-compose exec php dpkg -L git\n    #docker-compose execはdockerのコンテナ内でコマンドを実行するコマンドです。\n\tapt-get install -y git unzip libzip-dev libicu-dev libonig-dev nodejs npm &amp;&amp; \\\n    #PHPの拡張ライブラリをインストール\n\tdocker-php-ext-install intl pdo_mysql zip bcmath\n\n#php.ini(PHPの設定ファイル)をDockerの仮想環境のコンテナにコピー\n#php.iniは自分で用意する必要がある\nCOPY ./docker/php/php.ini /usr/local/etc/php/php.ini\n\n#Laravelを使うためComposerをインストール\n#本当はRUNでコマンドを実行しComposerをインストールしてもいいが、マルチステージビルドという方法でイメージの軽量化を図るための書き方です。\n#この方法でやるのが最近見た感じ多そうでした。\nCOPY --from=composer:2.4.1 /usr/bin/composer /usr/bin/composer\n\n#コンテナ起動中にdocker-compose exec コンテナ名 bash でコンテナ内でbashを動かせるのだが、その際のカレントディレクトリ(初期位置)になる\nWORKDIR /app</code></pre></div>\n<h4 id=\"2phpini\" style=\"position:relative;\"><a href=\"#2phpini\" aria-label=\"2phpini permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.php.ini</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#一般的な設定について、あまり詳しくないので以下から引用させてもらっています。\n#https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\n\nzend.exception_ignore_args = off\nexpose_php = on\nmax_execution_time = 30\nmax_input_vars = 1000\nupload_max_filesize = 64M\npost_max_size = 128M\nmemory_limit = 256M\nerror_reporting = E_ALL\ndisplay_errors = on\ndisplay_startup_errors = on\nlog_errors = on\nerror_log = /var/log/php/php-error.log\ndefault_charset = UTF-8\n\n[Date]\ndate.timezone = Asia/Tokyo\n\n[mysqlnd]\nmysqlnd.collect_memory_statistics = on\n\n[Assertion]\nzend.assertions = 1\n\n[mbstring]\nmbstring.language = Japanese</code></pre></div>\n<h3 id=\"4mysqlの設定ファイル\" style=\"position:relative;\"><a href=\"#4mysql%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\" aria-label=\"4mysqlの設定ファイル permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.mysqlの設定ファイル</h3>\n<h4 id=\"1dockerfile-2\" style=\"position:relative;\"><a href=\"#1dockerfile-2\" aria-label=\"1dockerfile 2 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Dockerfile</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#mysqlのイメージを作成する自作ファイル\n\n#Docker Hub公式からイメージファイルを使用する\n#イメージ名:タグ(version指定)\nFROM mysql:8.0\n\n#MySQLの設定ファイル（my.conf）Docker内の仮想環境のコンテナ内にコピー\nCOPY ./docker/mysql/my.conf /etc/my.conf</code></pre></div>\n<h4 id=\"2myconf\" style=\"position:relative;\"><a href=\"#2myconf\" aria-label=\"2myconf permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.my.conf</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#あまり詳しくないので以下から引用させていただいてます。\n#https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\n\n[mysqld]\n# character\ncharacter_set_server = utf8mb4\ncollation_server = utf8mb4_0900_ai_ci\n\n# timezone\ndefault-time-zone = SYSTEM\nlog_timestamps = SYSTEM\n\n# Error Log\nlog-error = mysql-error.log\n\n# Slow Query Log\nslow_query_log = 1\nslow_query_log_file = mysql-slow.log\nlong_query_time = 1.0\nlog_queries_not_using_indexes = 0\n\n# General Log\ngeneral_log = 1\ngeneral_log_file = mysql-general.log\n\n[mysql]\ndefault-character-set = utf8mb4\n\n[client]\ndefault-character-set = utf8mb4</code></pre></div>\n<h3 id=\"5docker-composeの設定ファイルを作成\" style=\"position:relative;\"><a href=\"#5docker-compose%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\" aria-label=\"5docker composeの設定ファイルを作成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.Docker Composeの設定ファイルを作成</h3>\n<p>nginx_mysql_laravel フォルダ直下にdocker-compose.ymlを作成し設置してください。</p>\n<p>docker-compose.ymlは上記1-4で作成したDockerfile+phpMyAdminを一括で起動、管理するために必要なファイルになります。</p>\n<h4 id=\"1docker-composeymlを作成\" style=\"position:relative;\"><a href=\"#1docker-composeyml%E3%82%92%E4%BD%9C%E6%88%90\" aria-label=\"1docker composeymlを作成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.docker-compose.ymlを作成</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#参考\n#https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\n#https://qiita.com/ucan-lab/items/56c9dc3cf2e6762672f4\n\n#Docker Composeのバージョン\n#https://docs.docker.jp/compose/compose-file/compose-versioning.html#compose-file-versioning\n#※Compose 最新バージョンが3.9みたいなので、それで記載してます。\n#※いまいち最新の推奨が何なのかはわかってないです。すみません。\nversion: \"3.9\"\n\n#使うサービス(機能)を書いていく\nservices:\n  #サービス名(任意で命名)\n  php:\n    #自作のDockerfileからイメージ生成するための記載\n    build:\n      #ビルドを実行する場所\n      context: .\n      #Dockerfileまでのdocker-compose.ymlから見た相対パス\n      dockerfile: ./docker/php/Dockerfile\n    # コンテナを指定しやすくするための名前指定(任意)\n    container_name: php\n    #データの永続化(Dockerを切ってもデータが残るようにする)\n    #Dockerはメモリ上で動くので、永続化しないと作業データが残らなくなります。\n    volumes:\n      #ホスト側の ./laravel/をコンテナ側の /app にマウントし永続化する\n      #コンテナにappフォルダが、ローカルにlaravelフォルダが自動で作成され共有状態になる\n      #※＝ローカルにデータが残り共有されるのでデータの永続化になります。\n      - ./laravel/:/app\n\n  #サービス名  \n  nginx:\n    build:\n      context: .\n      dockerfile: ./docker/nginx/Dockerfile\n    # コンテナを指定しやすくするための名前指定(任意)\n    container_name: nx\n    #http://localhost:ポート番号でアクセスするためのポートフォワーディング設定\n    #ローカルのポート:コンテナのポートと記載する\n    #今回は8081で80(nginxのデフォルトのポート)にポートフォワーディングしてる\n    ports:\n      - 8081:80\n    #サービスの起動順序を制御\n    #php → web の順に起動するように指定\n    #この辺わかってないですが、無くても動くみたいです。\n    depends_on:\n      - php\n    volumes:\n      - ./laravel/:/app\n\n  #サービス名  \n  mysql:\n    build:\n      context: .\n      dockerfile: ./docker/mysql/Dockerfile\n    # コンテナを指定しやすくするための名前指定(任意)\n    container_name: mysql\n    #http://localhost:ポート番号でアクセスするためのポートフォワーディング設定\n    #ローカルのポート:コンテナのポートと記載する\n    ports:\n      - 3306:3306\n    #環境変数の設定。この内容をLaravelの設定ファイルにも書きます。\n    #実際のプロジェクト管理では、環境変数は .env に書いて .gitignore にするなどして、重要な情報が公開されないようにします。\n    environment:\n      MYSQL_DATABASE: database\n      MYSQL_USER: user\n      MYSQL_PASSWORD: password\n      MYSQL_ROOT_PASSWORD: password\n      TZ: 'Asia/Tokyo'\n    volumes:\n      #名前付きボリュームでDBのデータを永続化\n      #Docker内で保持される、一見するとどこに行ったかわからなくなる\n      #確認方法はdocker volume ls、docker volume inspectのMountpointでコンテナ内のパスや名前が確認できる\n      #名前付きボリュームは--volumeオプションで指定して消さないといけない。\n      #しれっとたまるのでデスクトップアプリやdocker volume lsで確認するといい\n\n      #重くなったら以下で整理\n      #docker volume prune:未使用のものをディレクトリ関係なく全領域からもろとも削除\n      #docker-compose down --volumes:今いるディレクトリに対してコンテナ停止、削除、ボリュームを削除する\n      - mysql-volume:/var/lib/mysql\n\n  # phpMyadminのコンテナ作成\n  phpmyadmin:\n    #nginxがあるのでfpm版でと思ったけど、ApacheWebサーバーが含まれてるphpmyadmin:latestにしてます。\n    #※別のWebサーバーが既にある場合phpmyadmin:fpmって書いてあったけど、上手く動かせませんでした\n    \n    #よくphpmyadmin/phpmyadminが使われてるがこれはphpmyadminがdockerHubの公式になるまえのイメージなので、今後は公式のイメージが推奨されてる\n    #https://hub.docker.com/_/phpmyadmin\n    image: phpmyadmin:latest\n\n    #サービスの起動順序を制御\n    #mysql → phpmyadmin の順に起動するように指定\n    #この辺わかってないですが、無くても動くみたいです。\n    depends_on:\n      - mysql\n    container_name: phpmyadmin\n    ports:\n      - \"8080:80\"\n    #phpMyAdmin設定値\n    #https://hub.docker.com/_/phpmyadmin\n    environment:\n      #1に設定すると、任意のサーバーへの接続が許可される\n      - PMA_ARBITRARY=1\n      #サーバーのホスト名かIPアドレスをサービス名で指定\n      #本ファイルの場合mysqlになる\n      - PMA_HOSTS=mysql\n      #サーバーに接続するユーザー名\n      - PMA_USER=root\n      #SQLサーバーに接続するユーザーのパスワード\n      - PMA_PASSWORD=password\n    volumes:\n      - ./docker/phpmyadmin/sessions:/sessions\n#名前付きボリュームの名前(一番下にかく)\nvolumes:\n  mysql-volume:</code></pre></div>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><strong>Docker Composeで一括管理、起動する理由</strong></p>\n<p>Dockerfileは一つのコンテナのイメージ情報しか持っていません。</p>\n<p>そのため複数コンテナで構築される仮想環境の場合は、docker-compose.ymlで一括管理して起動することで、起動する手間や一個一個起動した際の予期せぬエラーを防ぐことができます。</p>\n<p>例)<br>\nDockerfileをコンテナにする場合は以下2つのコマンドを使います。</p>\n<p>1.docker build(イメージ化)<br>\n2.docker run(イメージをコンテナ化)</p>\n<p>今回はMySQL、php、nginx、phpMyAdminの四つのコンテナで構成されてるので、docker-compose.ymlを使わない場合、毎回起動時にこのセットを4回しないといけなくなります。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\nお疲れ様でした。</p>\n<p>次回は4「Laravelをコマンドでインストール」を行います。<br>\nその後5で実際にコンテナを起動していきます。</p>\n<p>Dockerシリーズの全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。 Dockerはコンテナ？イメージ？Dockerfile?docker-compose.yml?などの役割が頭に入ってくると理解しやすくなりますが、  \nそこも慣れなので、焦らずにやっていきましょう。\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker2/"},"frontmatter":{"title":"【Docker】#2 ローカル(ホスト)に作業フォルダを作成","date":"2022-10-12","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li><a href=\"#%E7%94%A8%E8%AA%9E\">用語</a></li>\n<li><a href=\"#%E3%83%9B%E3%82%B9%E3%83%88%E3%81%AB%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E4%BD%9C%E6%88%90\">ホストに作業フォルダを作成</a></li>\n<li><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>今回は第二回目です。<br>\nホスト(ローカル環境)に作業用のフォルダを作成します。</p>\n<p>Dockerのインストールが終わってない方は、一回目の記事を参考にインストールしてみてください。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"../docker1\">【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール</a></p>\n</div>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"用語\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E8%AA%9E\" aria-label=\"用語 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用語</h2>\n<p>先によく出てくる用語だけ記載しておきます。<br>\n作業中にわからなくなったら見てください。</p>\n<table class=\"cps-table03\" style=\"height: 258px;\"><tbody><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ホストOS</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">作業側のパソコン。ローカルともいう</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">Dockerfile</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">イメージをビルドで作るためのDockerの設定ファイル</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">イメージ</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">コンテナを作成するためにDockerfileからビルドで作成されたもの。  \nDockerhubで配布されている公式のイメージもある。</td></tr><tr style=\"height: 19px;\"><th style=\"height: 19px; width: 189.703px;\">ビルド</th><td class=\"rankinginfo\" style=\"height: 19px; width: 461.297px;\">Dockerfileからイメージを作成する事</td></tr><tr style=\"height: 55px;\"><th style=\"height: 55px; width: 189.703px;\">コンテナ</th><td class=\"rankinginfo\" style=\"height: 55px; width: 461.297px;\">イメージから作成された各機能のこと。  \nサービスとも呼ばれる。  \nこのコンテナの集まりで環境が構築される</td></tr><tr style=\"height: 36px;\"><th style=\"height: 36px; width: 189.703px;\">docker-compose</th><td class=\"rankinginfo\" style=\"height: 36px; width: 461.297px;\">複数のコンテナを一気に作成したりできる一元管理機能。  \nDockerを使う場合実質必須になります。</td></tr><tr style=\"height: 74px;\"><th style=\"height: 74px; width: 189.703px;\">docker-compose.yml</th><td class=\"rankinginfo\" style=\"height: 74px; width: 461.297px;\">複数のコンテナを一気に作成、起動したりできるdocker-composeの一元管理ファイル。  \ndocker-composeをインストールしてdocker-compose.ymlを作成してdocker composeコマンドで実行して利用します。</td></tr></tbody></table>\n<h2 id=\"ホストに作業フォルダを作成\" style=\"position:relative;\"><a href=\"#%E3%83%9B%E3%82%B9%E3%83%88%E3%81%AB%E4%BD%9C%E6%A5%AD%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E4%BD%9C%E6%88%90\" aria-label=\"ホストに作業フォルダを作成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ホストに作業フォルダを作成</h2>\n<p>以下★マークのフォルダを作成してください。<br>\n空で大丈夫です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx_mysql_laravel/★\t　　　　TOPフォルダ。名前はコンテナ起動前(環境構築前)なら自由に変更可能\n├── laravel★ \t\t　　　　Laravelのソースコードが置かれるフォルダ=実作業フォルダ\n├── docker★\t\t　　　　dockerの設定ファイルや環境設定ファイルを置くフォルダ。\n│ 　　　　　　　　　　　　　　　　ここの配下のフォルダ名を変える場合、\n│ 　　　　　　　　　　　　　　　　Dockerfileとかdocker-compose.ymlでパスの修正が必要です\n│   ├── php★\t\t  　　　phpコンテナ(phpの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tphpのDockerfile\n│   │   └── php.ini\t\tphp設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   ├── mysql★ \t\tMySQLコンテナ(MySQLの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tMySQLのDockerfile\n│   │   └── my.conf\t\tmysql 設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── nginx★\t\t　　　　nginxコンテナ(nginxの環境構築設定ファイル)\n│   │   ├── Dockerfile\t\tnginxのDockerfile\n│   │   └── default.conf\tnginx設定ファイル環境立ち上げるときにコンテナにコピーされます\n│   └── phpmyadmin★\t\tphpMyAdminのデータが永続化される場所\n└──  docker-compose.yml\t\t全コンテナの一括管理をするDockerの設定ファイル</code></pre></div>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><span style=\"color: #ff0000;\"><strong>Dockerでコンテナを作った後に、フォルダ名変更などローカルのフォルダのパスが変わるようなことはしないでください。</strong></span></p>\n<p>どうなるか試したのですが、イメージもコンテナも消せなくなりました。<br>\n(強制削除もDockerデスクトップアプリでの削除もできませんでした)</p>\n<p>一旦同じフォルダ名で同じdocker-compose.yml、dockerfileを用意したら消すことができたのですが、<br>\nよくわからない状態になるので注意してください。</p>\n</div>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>今回はこれで完了です。<br>\n次回は3「Dockerの設定ファイルを作成」を行います。</p>\n<p>全体の流れとしては、大きく以下のようになっています。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。<br>\nDockerはコンテナ？イメージ？Dockerfile?docker-compose.yml?などの役割が頭に入ってくると理解しやすくなりますが、  \nそこも慣れなので、焦らずにやっていきましょう。\n  </div>\n</div>"}},{"node":{"fields":{"slug":"/posts/docker1/"},"frontmatter":{"title":"【Docker】#1 はじめに+Dockerとは+Docker Desktopインストール","date":"2022-10-11","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083888","images":{"fallback":{"src":"/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg","srcSet":"/static/574cd5fb147070ce27674d66e78170e0/0f14f/docker_icon.jpg 48w,\n/static/574cd5fb147070ce27674d66e78170e0/db73f/docker_icon.jpg 95w,\n/static/574cd5fb147070ce27674d66e78170e0/cd58f/docker_icon.jpg 190w","sizes":"(min-width: 190px) 190px, 100vw"},"sources":[{"srcSet":"/static/574cd5fb147070ce27674d66e78170e0/7c30c/docker_icon.webp 48w,\n/static/574cd5fb147070ce27674d66e78170e0/2fb9c/docker_icon.webp 95w,\n/static/574cd5fb147070ce27674d66e78170e0/9524e/docker_icon.webp 190w","type":"image/webp","sizes":"(min-width: 190px) 190px, 100vw"}]},"width":190,"height":85}}}},"html":"<div class=\"toc-title\">目次</div>\n<div class=\"toc-block\">\n<ol>\n<li>\n<p><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></p>\n</li>\n<li>\n<p><a href=\"#docker%E3%81%A8%E3%81%AF\">Dockerとは</a></p>\n<ol>\n<li><a href=\"#%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE\">環境構築に必要なもの</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#docker-desktop%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Docker Desktopインストール</a></p>\n<ol>\n<li><a href=\"#1docker%E3%81%AE%E5%85%AC%E5%BC%8F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">1.Dockerの公式サイトにアクセス</a></li>\n<li><a href=\"#2-download-for-windows%E3%82%92%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF\">2. Download for Windowsをクリック</a></li>\n<li><a href=\"#3docker-desktop-installerexe%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">3.Docker Desktop Installer.exeを実行しインストール</a></li>\n<li><a href=\"#4dockerhub%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E4%BD%9C%E6%88%90\">4.dockerHubアカウント作成</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">さいごに</a></p>\n</li>\n</ol>\n</div>\n<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>今回業務で開発環境を作る際に共有できるノウハウが存在しないチームだったので、展開できる方法を検討し、Dockerが最適だと判断し個人で勉強しチームに展開まで行いました。</p>\n<p>この通りやれば環境を再現してローカルで使える！というところまで、まとめたので時間がある限りブログに残そうかと思っています。</p>\n<p>作成する環境は以下の通りです。</p>\n<ul>\n<li>windows pc</li>\n<li>php 8.0.23</li>\n<li>composer 2.4.1</li>\n<li>nginx 1.22.0</li>\n<li>MySQL 8.0.30</li>\n<li>Laravel 6.20.44</li>\n<li>phpMyAdmin最新</li>\n</ul>\n<p>参考にした教材は以下です。<br>\nこちらがなかったらここまで実現できなかったと思います。</p>\n<p>ありがとうございます。</p>\n<div class=\"boxparts ref\">\n  <div class=\"title\"></div>\n<p><a href=\"https://www.udemy.com/course/docker-startup/\">駆け出しエンジニアのためのDocker入門</a></p>\n<p><a href=\"https://qiita.com/hinako_n/items/f15646ea548bcdc8ac6c\">DockerでPHP（Laravel）+ nginx + MySQLのLEMP環境を構築する</a></p>\n</div>\n<p>なお、私自身はインフラ専門家ではないので、インフラの各種機能の設定値は深堀していません。<br>\n本気で事業で使う場合はインフラの専門家の方にDockerファイルを作成+本番環境での運用を想定してもらい、それを作業者は起動、運用するだけ、という風にするのが理想だと思います。</p>\n<h2 id=\"dockerとは\" style=\"position:relative;\"><a href=\"#docker%E3%81%A8%E3%81%AF\" aria-label=\"dockerとは permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerとは</h2>\n<p>環境構築を設定ファイルとコマンドで行えるツールです。<br>\n設定ファイルとコマンドで成り立つため、個人個人で環境の統一がしやすいのがメリットです。</p>\n<p>Dockerの設定ファイルになれればバージョンの変更も容易なので、最初の敷居は高めですが、なれるとDocker一択！というほどお手軽で便利でチームで使いやすいものだと感じました。</p>\n<p>手順を体系的に書いてわたすのがすごく楽になります。</p>\n<h3 id=\"環境構築に必要なもの\" style=\"position:relative;\"><a href=\"#%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE\" aria-label=\"環境構築に必要なもの permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>環境構築に必要なもの</h3>\n<table class=\"cps-table03\"><tbody><tr><th>Docker</th><td class=\"rankinginfo\">今回のメインツール</td></tr><tr><th>プロジェクトフォルダ</th><td class=\"rankinginfo\">ローカルPCの作業フォルダ。  \nこの構造に沿って、docker-compose.ymlで共有フォルダのパスなどを設定し環境を動かす基盤にする</td></tr><tr><th>phpやdbなどの設定ファイル</th><td class=\"rankinginfo\">使う機能の設定ファイルは自分で用意する必要があります</td></tr><tr><th>Dockerfile</th><td class=\"rankinginfo\">Dockerイメージをビルドする設定ファイル</td></tr><tr><th>docker-compose.yml</th><td class=\"rankinginfo\">イメージからコンテナを一括で起動、管理するファイル</td></tr></tbody></table>\n<h2 id=\"docker-desktopインストール\" style=\"position:relative;\"><a href=\"#docker-desktop%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"docker desktopインストール permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Desktopインストール</h2>\n<p>最初はDockerを使うためのアプリをインストールしましょう。<br>\nこのアプリを起動してDockerで仮想環境を起動します。</p>\n<h3 id=\"1dockerの公式サイトにアクセス\" style=\"position:relative;\"><a href=\"#1docker%E3%81%AE%E5%85%AC%E5%BC%8F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\" aria-label=\"1dockerの公式サイトにアクセス permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Dockerの公式サイトにアクセス</h3>\n<p><a href=\"https://www.docker.com/get-started/\">https://www.docker.com/get-started/</a></p>\n<h3 id=\"2-download-for-windowsをクリック\" style=\"position:relative;\"><a href=\"#2-download-for-windows%E3%82%92%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF\" aria-label=\"2 download for windowsをクリック permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Download for Windowsをクリック</h3>\n<p>※ちょっと下のSee Docker Desktop for Windowsも同じです</p>\n<h3 id=\"3docker-desktop-installerexeを実行しインストール\" style=\"position:relative;\"><a href=\"#3docker-desktop-installerexe%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%97%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"3docker desktop installerexeを実行しインストール permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.Docker Desktop Installer.exeを実行しインストール</h3>\n<p>※結構時間かかりますが、いわれるがまま実行で大丈夫です。</p>\n<div class=\"boxparts caution\">\n  <div class=\"title\"></div>\n<p><strong>DockerDesktop(Docker for Windows)とVirtualBoxについて</strong></p>\n<p>VirtualBoxとDockerDesktopは共存できないみたいです。</p>\n<p>もしこの問題がある場合は、現在非推奨のDocker tool boxであれば一応Dockerを使うことができます。</p>\n<p>Docker tool boxはつかったことないので、今回は割愛します。</p>\n</div>\n<h3 id=\"4dockerhubアカウント作成\" style=\"position:relative;\"><a href=\"#4dockerhub%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E4%BD%9C%E6%88%90\" aria-label=\"4dockerhubアカウント作成 permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.dockerHubアカウント作成</h3>\n<p><a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<p>※アカウント作成しないとdocker hub からイメージという主要ファイルをDL(pull)できなかったりするケースがあるそうです。</p>\n<h2 id=\"さいごに\" style=\"position:relative;\"><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\" aria-label=\"さいごに permalink\" class=\"toc-icon before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>さいごに</h2>\n<p>これでDockerのインストールや登録などの事前準備は完了です。<br>\n今後の流れとしては、大きく以下のようになります。</p>\n<ol>\n<li>Docker Desktopインストール</li>\n<li>ローカルに作業フォルダを作成</li>\n<li>Dockerの設定ファイルを作成</li>\n<li>Laravelをコマンドでインストール</li>\n<li>dockerでコンテナ(機能)を起動+Laravel表示確認</li>\n<li>LaravelのDB設定、確認</li>\n<li>phpMyAdmin表示確認</li>\n<li>出来てる環境の確認</li>\n</ol>\n<div class=\"balloon\">\n  <div class=\"icon\"></div>\n  <div class=\"talk\">\n今回はここでおわりです。<br>\nDockerはコンテナ？イメージ？Dockerfile?docker-compose.yml?などの役割が頭に入ってくると理解しやすくなりますが、  \nそこも慣れなので、焦らずにやっていきましょう。\n  </div>\n</div>"}}]}},"pageContext":{"tag":"Docker"}},"staticQueryHashes":["2786925534","3000541721","3159585216","3358258035","426580341","602374650"],"slicesMap":{}}